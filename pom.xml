<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.6</version>
        <relativePath/>
    </parent>
    <groupId>com.ryanair.interconnector</groupId>
    <artifactId>flight-interconnector-soa-api</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>interconnecting-flights</name>
    <description>RESTful API for interconnecting flights</description>
    <url/>
    <licenses>
        <license/>
    </licenses>
    <developers>
        <developer>
            <name>Fernando de la Gándara Fernández</name>
        </developer>
    </developers>
    <scm>
        <connection/>
        <developerConnection/>
        <tag/>
        <url/>
    </scm>
    <properties>
        <java.version>24</java.version>
        <openapi-generator.version>7.13.0</openapi-generator.version>
        <lombok.version>1.18.38</lombok.version>

        <!-- OpenAPI -->
        <swagger.annotations.version>2.2.30</swagger.annotations.version>
        <jackson.databind.nullable.version>0.2.6</jackson.databind.nullable.version>
        <springdoc.openapi.version>2.8.8</springdoc.openapi.version>
        <spring.openfeign.version>4.2.1</spring.openfeign.version>

        <!-- Testing -->
        <spring.wiremock.version>3.0.0</spring.wiremock.version>
        <jacoco.version>0.8.13</jacoco.version>
        <jacoco.dest.dir>${project.build.directory}</jacoco.dest.dir>
        <spotbugs.version>4.9.3.0</spotbugs.version>
        <spotbugs.annotations.version>4.9.3</spotbugs.annotations.version>
    </properties>

    <dependencies>

        <!-- Web + Validation -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- Optional DevTools -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- OpenFeign -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
            <version>${spring.openfeign.version}</version>
        </dependency>

        <!-- OpenAPI -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${springdoc.openapi.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>${jackson.databind.nullable.version}</version>
        </dependency>

        <!-- JSON, Annotations, Logging -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
        </dependency>

        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- SpotBugs -->
        <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-annotations</artifactId>
            <version>${spotbugs.annotations.version}</version>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wiremock.integrations</groupId>
            <artifactId>wiremock-spring-boot</artifactId>
            <version>${spring.wiremock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>spring-mock-mvc</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured-common</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- To avoid issues with Lombok during compilation -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>analyze</id>
                        <goals>
                            <goal>analyze</goal>
                        </goals>
                        <phase>verify</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>${openapi-generator.version}</version>

                <executions>
                    <!-- External API clients code generation -->
                    <execution>
                        <id>generate-external-clients</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpecRootDirectory>
                                ${project.basedir}/src/main/resources/openapi/clients
                            </inputSpecRootDirectory>
                            <generatorName>spring</generatorName>
                            <library>spring-boot</library>
                            <apiPackage>
                                com.ryanair.interconnectingflights.external.api
                            </apiPackage>
                            <modelPackage>
                                com.ryanair.interconnectingflights.external.model
                            </modelPackage>
                            <output>${project.build.directory}/generated-sources/openapi-clients</output>
                            <addCompileSourceRoot>true</addCompileSourceRoot>
                            <generateSupportingFiles>false</generateSupportingFiles>
                            <configOptions>
                                <useSpringBoot3>true</useSpringBoot3>
                                <useTags>true</useTags>
                                <useResponseEntity>false</useResponseEntity>
                                <interfaceOnly>true</interfaceOnly>
                                <skipDefaultInterface>true</skipDefaultInterface>
                            </configOptions>
                            <typeMappings>
                                <typeMapping>time=LocalTime</typeMapping>
                            </typeMappings>
                            <importMappings>
                                <importMapping>LocalTime=java.time.LocalTime</importMapping>
                            </importMappings>
                        </configuration>
                    </execution>

                    <!-- API server code generation -->
                    <execution>
                        <id>generate-interconnections-server</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>
                                ${project.basedir}/src/main/resources/openapi/server/server-interconnections-api.yaml
                            </inputSpec>

                            <generatorName>spring</generatorName>
                            <library>spring-boot</library>

                            <apiPackage>com.ryanair.interconnectingflights.api</apiPackage>
                            <modelPackage>com.ryanair.interconnectingflights.model</modelPackage>

                            <configOptions>
                                <useSpringBoot3>true</useSpringBoot3>
                                <interfaceOnly>true</interfaceOnly>
                                <useTags>true</useTags>
                                <skipDefaultInterface>true</skipDefaultInterface>
                                <useResponseEntity>false</useResponseEntity>
                                <responseWrapper>CompletableFuture</responseWrapper>
                            </configOptions>
                            <typeMappings>
                                <typeMapping>local-date-time=LocalDateTime</typeMapping>
                            </typeMappings>
                            <importMappings>
                                <importMapping>LocalDateTime=java.time.LocalDateTime</importMapping>
                            </importMappings>
                            <output>${project.build.directory}/generated-sources/interconnections-server</output>
                            <addCompileSourceRoot>true</addCompileSourceRoot>
                            <generateSupportingFiles>false</generateSupportingFiles>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- For code coverage and static analysis -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.13</version>
                <!-- There are the OpenAPI generated sources and the Spring main, which we do not need to cover -->
                <configuration>
                    <excludes>
                        <exclude>com/ryanair/interconnectingflights/external/model/**</exclude>
                        <exclude>com/ryanair/interconnectingflights/model/**</exclude>
                        <exclude>com/ryanair/interconnector/InterconnectingFlightsApplication.class</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <!-- Prepare agent for unit tests -->
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/jacoco-ut.exec</destFile>
                            <propertyName>jacoco.ut.argLine</propertyName>
                        </configuration>
                    </execution>

                    <!-- Merge reports -->
                    <execution>
                        <id>merge</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>merge</goal>
                        </goals>
                        <configuration>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.build.directory}</directory>
                                    <includes>
                                        <include>jacoco-ut.exec</include>
                                        <include>jacoco-it.exec</include>
                                    </includes>
                                </fileSet>
                            </fileSets>
                            <destFile>${project.build.directory}/jacoco-merged.exec</destFile>
                        </configuration>
                    </execution>

                    <!-- Generate report -->
                    <execution>
                        <id>report</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/jacoco-merged.exec</dataFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Surefire (unit tests) -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>${jacoco.ut.argLine}</argLine>
                </configuration>
            </plugin>
            <!-- Failsafe (integration tests) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <argLine>
                        -javaagent:${settings.localRepository}/org/jacoco/org.jacoco.agent/${jacoco.version}/org.jacoco.agent-${jacoco.version}-runtime.jar=destfile=${project.build.directory}/jacoco-it.exec
                    </argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${spotbugs.version}</version>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                            <goal>spotbugs</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <effort>Max</effort>
                    <threshold>Low</threshold>
                    <xmlOutput>true</xmlOutput>
                    <failOnError>true</failOnError>
                    <excludeFilterFile>${basedir}/spotbugs-ignore.xml</excludeFilterFile>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
